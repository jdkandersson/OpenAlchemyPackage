openapi: "3.0.0"

info:
  title: OpenAlchemy Package
  description: API backing the OpenAlchemy package service
  version: "0.1"

servers:
  - url: https://package.api.openalchemy.io/v1

security:
  - bearerAuth: []

paths:
  /specs:
    get:
      summary: List all available specs
      operationId: library.specs.list_
      responses:
        200:
          description: All the available specs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SpecInfo"
        401:
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
  /specs/{spec_name}:
    get:
      summary: Retrieve a spec
      operationId: library.specs.get
      parameters:
        - $ref: "#/components/parameters/SpecName"
      responses:
        200:
          description: The requested spec
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Spec"
        401:
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        404:
          description: Spec was not found
          content:
            text/plain:
              schema:
                type: string
    put:
      summary: Create or update a spec
      operationId: library.specs.put
      parameters:
        - $ref: "#/components/parameters/SpecName"
        - in: header
          name: X-LANGUAGE
          description: The language of the spec
          required: true
          schema:
            type: string
            enum:
              - JSON
              - YAML
      requestBody:
        description: The spec to store or update
        required: true
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/SpecValue"
      responses:
        204:
          description: The spec has been stored
        500:
          description: Something went wrong whilst saving the spec
          content:
            text/plain:
              schema:
                type: string
        400:
          description: The spec is not valid
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        402:
          description: Payment required
          content:
            text/plain:
              schema:
                type: string
    delete:
      summary: Delete a spec
      operationId: library.specs.delete
      parameters:
        - $ref: "#/components/parameters/SpecName"
      responses:
        204:
          description: The spec has been deleted
        401:
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
  /specs/{spec_name}/versions:
    get:
      summary: List all available versions for a spec
      operationId: library.specs.versions.list_
      parameters:
        - $ref: "#/components/parameters/SpecName"
      responses:
        200:
          description: All the available versions for a spec
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SpecInfo"
        401:
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        404:
          description: Spec was not found
          content:
            text/plain:
              schema:
                type: string
  /specs/{spec_name}/versions/{version}:
    get:
      summary: Retrieve a spec
      operationId: library.specs.versions.get
      parameters:
        - $ref: "#/components/parameters/SpecName"
        - $ref: "#/components/parameters/SpecVersion"
      responses:
        200:
          description: The requested spec
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Spec"
        401:
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        404:
          description: Spec was not found
          content:
            text/plain:
              schema:
                type: string
    put:
      summary: Create or update a specific versions of a spec
      operationId: library.specs.versions.put
      parameters:
        - $ref: "#/components/parameters/SpecName"
        - $ref: "#/components/parameters/SpecVersion"
        - in: header
          name: X-LANGUAGE
          description: The language of the spec
          required: true
          schema:
            type: string
            enum:
              - JSON
              - YAML
      requestBody:
        description: The spec to store or update
        required: true
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/SpecValue"
      responses:
        204:
          description: The spec has been stored
        500:
          description: Something went wrong whilst saving the spec
          content:
            text/plain:
              schema:
                type: string
        400:
          description: The spec is not valid or there is a version mismatch in the path and spec
          content:
            text/plain:
              schema:
                type: string
        401:
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        402:
          description: Payment required
          content:
            text/plain:
              schema:
                type: string
  /credentials/default:
    get:
      summary: Retrieve the default machine to machine credentials
      operationId: library.credentials.get
      responses:
        200:
          description: The default credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credentials"
        401:
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
    delete:
      summary: Delete the default machine to machine credentials
      operationId: library.credentials.delete
      responses:
        204:
          description: The default credentials have been deleted
        401:
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string

components:
  parameters:
    SpecName:
      in: path
      name: spec_name
      schema:
        $ref: "#/components/schemas/SpecName"
      required: true
      description: The display name of the spec
    SpecVersion:
      in: path
      name: version
      schema:
        $ref: "#/components/schemas/SpecVersion"
      required: true
      description: The version of the spec
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      x-bearerInfoFunc: library.helpers.token.decode
  schemas:
    SpecName:
      description: The display name of an OpenAPI specification
      type: string
      pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9])$
    SpecId:
      description: The id of an OpenAPI specification (it is the canonical version of the spec name)
      type: string
      pattern: ^([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])$
      readOnly: true
    SpecValue:
      description: The value of an OpenAPI specification
      type: string
    SpecVersion:
      description: The version of an OpenAPI specification
      type: string
      pattern: ^([1-9][0-9]*!)?(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*((a|b|rc)(0|[1-9][0-9]*))?(\.post(0|[1-9][0-9]*))?(\.dev(0|[1-9][0-9]*))?$
    SpecUpdatedAt:
      description: The last time the OpenAPI specification was updated
      type: integer
      readOnly: true
    SpecTitle:
      description: The title of an OpenAPI specification
      type: string
    SpecDescription:
      description: The description of an OpenAPI specification
      type: string
    SpecModelCount:
      description: The number of models in an OpenAPI specification
      type: integer
      readOnly: true
    SpecInfo:
      description: Information about a an OpenAPI specification
      type: object
      properties:
        name:
          $ref: "#/components/schemas/SpecName"
        id:
          $ref: "#/components/schemas/SpecId"
        version:
          $ref: "#/components/schemas/SpecVersion"
        updated_at:
          $ref: "#/components/schemas/SpecUpdatedAt"
        title:
          $ref: "#/components/schemas/SpecTitle"
        description:
          $ref: "#/components/schemas/SpecDescription"
        model_count:
          $ref: "#/components/schemas/SpecModelCount"
      required:
        - name
        - id
        - version
        - model_count
    Spec:
      description: The spec
      allOf:
        - $ref: "#/components/schemas/SpecInfo"
        - type: object
          properties:
            value:
              $ref: "#/components/schemas/SpecValue"
          required:
            - value
    PublicKey:
      description: A public key for for machine to machine interactions.
      type: string
      pattern: ^pk_[a-zA-Z0-9]+$
    SecretKey:
      description: A secret key for machine to machine interactions.
      type: string
      pattern: ^sk_[a-zA-Z0-9]+$
    Credentials:
      description: Machine to machine credentials
      type: object
      properties:
        public_key:
          $ref: "#/components/schemas/PublicKey"
        secret_key:
          $ref: "#/components/schemas/SecretKey"
      required:
        - public_key
        - secret_key
