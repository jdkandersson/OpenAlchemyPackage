name: Index CI-CD

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/ci-cd-index.yaml"
      - "index/**"
      - "infrastructure/**"
      - "!infrastructure/lib/*-stack.ts"
      - "infrastructure/lib/index-stack.ts"
      - "!infrastructure/test/**"
      - "!**.md"

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: set up python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.9
  #     - name: install pipenv
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pipenv
  #     - name: cache pipenv
  #       id: cache-pipenv
  #       uses: actions/cache@v2
  #       with:
  #         path: index/.venv
  #         key: ${{ runner.os }}-pipenv-${{ hashFiles('index/Pipfile.lock') }}
  #     - name: install dependencies
  #       working-directory: ./index
  #       if: steps.cache-pipenv.outputs.cache-hit != 'true'
  #       env:
  #         PIPENV_VENV_IN_PROJECT: 1
  #       run: |
  #         pipenv install --dev
  #     - name: set up node
  #       uses: actions/setup-node@v2.1.4
  #       with:
  #         node-version: 14.x
  #     - name: cache node modules
  #       id: cache-node_modules
  #       uses: actions/cache@v2
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         path: index/node_modules
  #         key: ${{ runner.os }}-npm-${{ hashFiles('index/package-lock.json') }}
  #     - name: run tests
  #       working-directory: ./index
  #       env:
  #         AWS_DEFAULT_REGION: "us-east-1"
  #       run: |
  #         pipenv run test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cache build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: index/dist/deployment-package.zip
          key: ${{ runner.os }}-index-${{ env.cache-name }}-${{ hashFiles('index/**') }}
      - name: set up python
        # if: steps.cache-build.outputs.cache-hit != 'true'
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: install pipenv
        # if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: create package
        working-directory: ./index
        # if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          pipenv lock -r > requirements.txt
          # remove what is already available in lambda
          echo initial
          cat requirements.txt
          echo proposed change
          cat requirements.txt\
            | sed '/boto/d' \
            | sed '/jmespath/d' \
            | sed '/python-dateutil/d' \
            | sed '/s3transfer/d' \
            | sed '/urllib3/d' \
            | sed '/six/d'
          cat requirements.txt \
            | sed '/boto/d' \
            | sed '/jmespath/d' \
            | sed '/python-dateutil/d' \
            | sed '/s3transfer/d' \
            | sed '/urllib3/d' \
            | sed '/six/d' \
            | tee requirements.txt
          echo final
          cat requirements.txt
          # install
          echo installing
          pip install -r requirements.txt --target dist
          cp -r app.py library dist/
          cd dist
          zip -r deployment-package.zip .
      - name: upload artifacts for release
        uses: actions/upload-artifact@v2
        with:
          name: index
          path: index/dist/deployment-package.zip

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - test
  #     - build
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: set up node
  #       uses: actions/setup-node@v2.1.4
  #       with:
  #         node-version: 14.x
  #     - name: cache node modules
  #       id: cache-node_modules
  #       uses: actions/cache@v2
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         path: infrastructure/node_modules
  #         key: ${{ runner.os }}-infrastructure-${{ env.cache-name }}-${{ hashFiles('infrastructure/package-lock.json') }}
  #     - name: install dependencies
  #       if: steps.cache-node_modules.outputs.cache-hit != 'true'
  #       working-directory: ./infrastructure
  #       run: npm install
  #     - name: retrieve build deployment package
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: index
  #         path: infrastructure/resources/index/
  #     - name: deploy
  #       working-directory: ./infrastructure
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_DEFAULT_REGION: "us-east-1"
  #         AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
  #         AWS_OPEN_ALCHEMY_CERTIFICATE_ARN: ${{ secrets.AWS_OPEN_ALCHEMY_CERTIFICATE_ARN }}
  #         AWS_OPEN_ALCHEMY_API_CERTIFICATE_ARN: ${{ secrets.AWS_OPEN_ALCHEMY_API_CERTIFICATE_ARN }}
  #         AWS_IDENTITY_PROVIDER_ARN: ${{ secrets.AWS_IDENTITY_PROVIDER_ARN }}
  #       run: |
  #         npm run deploy:index
