name: SDK CI-CD

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/ci-cd-sdk.yaml"
      - "sdk/**"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - name: cache node_modules
        id: cache-node_modules
        uses: actions/cache@v2
        with:
          path: sdk/node_modules
          key: ${{ runner.os }}-sdk-${{ env.cache-name }}-${{ hashFiles('sdk/package-lock.json') }}
      - name: install dependencies
        working-directory: ./sdk
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: |
          npm install
      - name: run tests
        working-directory: ./sdk
        run: |
          npm run test:ci

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - name: cache node_modules
        id: cache-node_modules
        uses: actions/cache@v2
        with:
          path: sdk/node_modules
          key: ${{ runner.os }}-sdk-${{ env.cache-name }}-${{ hashFiles('sdk/package-lock.json') }}
      - name: install dependencies
        working-directory: ./sdk
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: |
          npm install
      - name: run linting
        working-directory: ./sdk
        run: |
          npm run lint

  publish:
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
          registry-url: "https://registry.npmjs.org"
      - name: cache node_modules
        id: cache-node_modules
        uses: actions/cache@v2
        with:
          path: sdk/node_modules
          key: ${{ runner.os }}-sdk-${{ env.cache-name }}-${{ hashFiles('sdk/package-lock.json') }}
      - name: install dependencies
        working-directory: ./sdk
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: |
          npm install
      - name: create .npmrc
        working-directory: ./sdk
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}
          registry=https://registry.npmjs.org/
          always-auth=true' > .npmrc
      - name: publish
        working-directory: ./sdk
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          PUBLISHED_VERSION=$(npm view "@open-alchemy/package-sdk" dist-tags.latest)
          PACKAGE_VERSION=$(node -p -e "require('./package.json').version")
          [[ "$PUBLISHED_VERSION" == "$PACKAGE_VERSION" ]] || npm publish --access public
      - name: upload artifacts that were released
        uses: actions/upload-artifact@v2
        with:
          name: sdk
          path: sdk/dist/

  production-test:
    runs-on: ubuntu-latest
    needs:
      - publish
    steps:
      - uses: actions/checkout@v2
      - name: set up node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - name: install dependencies
        working-directory: ./test/sdk/
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: |
          npm install || sleep 30 && npm install || sleep 30 && npm install || sleep 30 && npm install
      - name: Run tests
        working-directory: ./test/sdk/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
          USER_POOL_ID: ${{ secrets.USER_POOL_ID }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          TEST_USERNAME: ${{ secrets.TEST_USERNAME_SDK }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD_SDK }}
        run: |
          npm run test
